"""
Django settings for SAMCApp project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os

from pathlib import Path
from datetime import timedelta

import logging
logging.basicConfig(level=logging.DEBUG)
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-j1y++1$kd4e3imq#t8w4x36ys0%!ska!5@3dksn&o_1xo@v+2_"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.TokenAuthentication',
#          'rest_framework_simplejwt.authentication.JWTAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#     ],

# }
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'SAMCSYS.authentication.MTTBJWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

SIMPLE_JWT = {
    'USER_ID_FIELD': 'user_id',
    'USER_ID_CLAIM': 'user_id',
    # Access tokens will expire after 1 day
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),

    # If you’re using refresh tokens and want them to also last 1 day:
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),

    # (Optional) adjust other settings as needed:
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    # ... any other SIMPLE_JWT settings ...
}

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
    "rest_framework_simplejwt",
    # 'rest_framework_simplejwt.token_blacklist',
    # "SAMCSYS.apps.SamcsysConfig"
    "SAMCSYS",
  
]
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://192.168.45.54:3000",
]
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000','http://192.168.45.54:3000']

CORS_ALLOWED_ORIGINS = [
    "http://192.168.1.11:35729",
    # origins ອື່ນໆທີ່ມີຢູ່ແລ້ວ...
]
CORS_ORIGIN_ALLOW_ALL = True

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "SAMCApp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "SAMCApp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    # "default": {
    #     # "ENGINE": "django.db.backends.sqlite3",
    #     #  "NAME": BASE_DIR / "db.sqlite3",
    #     "ENGINE": "django.db.backends.postgresql",
    #     "NAME": "SAMCDB",
    #     "USER": "postgres",
    #     "PASSWORD": "admin",
    #     "HOST": "192.168.10.35",
    #     "PORT": "5432"
    # }
    'default': {
        'ENGINE': 'mssql',                
        'NAME': 'SAMCDB',          
        'USER': 'sa',            
        'PASSWORD': 'mess!Q@083@@',
        'HOST': '192.168.10.35',  
        'PORT': '1433',                       
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
            # optional:
            # 'encrypt': True,    # if your server requires encryption
            # 'TrustServerCertificate': 'yes',
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
